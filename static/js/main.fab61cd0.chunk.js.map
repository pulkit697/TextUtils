{"version":3,"sources":["components/icons/ClipBoardIcon.js","components/icons/DeleteIcon.js","components/InputField.js","components/icons/SunIcon.js","components/icons/MoonIcon.js","components/Navbar.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["ClipBoardIcon","xmlns","width","height","fill","className","viewBox","d","DeleteIcon","fillRule","InputField","props","document","title","useState","text","setText","style","display","onClick","navigator","clipboard","writeText","showAlert","value","onChange","event","target","rows","myStyle","toUpperCase","toLowerCase","newText","lowertext","uppertext","i","length","trim","split","SunIcon","MoonIcon","Navbar","darkMode","backgroundColor","to","id","about_text","cursor","toggleTheme","defaultProps","About","borderColor","color","borderWidth","type","Alert","alert","class","role","heading","message","App","setDarkMode","lightTheme","darkTheme","setAlert","msg","setTimeout","setmyStyle","minHeight","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fab61cd0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const ClipBoardIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-clipboard\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\" />\r\n      <path d=\"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const DeleteIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"18\"\r\n      height=\"18\"\r\n      fill=\"red\"\r\n      className=\"bi bi-trash\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import { React, useState } from \"react\";\r\nimport { ClipBoardIcon } from \"./icons/ClipBoardIcon\";\r\nimport { DeleteIcon } from \"./icons/DeleteIcon\";\r\n\r\nexport const InputField = (props) => {\r\n  document.title = `TextUtils - Home`;\r\n  const [text, setText] = useState(\"\");\r\n  const onChangeHandler = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const convertToUpperCase = () => {\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\r\n      \"success\",\r\n      \"Success\",\r\n      \"Text has been changed to upper case\"\r\n    );\r\n  };\r\n  const convertToLowerCase = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\r\n      \"success\",\r\n      \"Success\",\r\n      \"Text has been changed to lower case\"\r\n    );\r\n  };\r\n  const convertToInverseCase = () => {\r\n    let newText = \"\";\r\n    const lowertext = text.toLowerCase();\r\n    const uppertext = text.toUpperCase();\r\n    for (let i = 0; i < text.length; i++) {\r\n      if (i % 2 === 0) newText += uppertext[i];\r\n      else newText += lowertext[i];\r\n    }\r\n    setText(newText);\r\n    props.showAlert(\r\n      \"success\",\r\n      \"Success\",\r\n      \"Text has been changed to inverse case\"\r\n    );\r\n  };\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"primary\", \"Success\", \"Copied to clipboard!\");\r\n  };\r\n  const eraseText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"warning\", \"Success\", \"Text erased\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 style={{ display: \"inline\" }}>Enter text to convert here:</h1>\r\n      <button\r\n        className=\"btn btn-link float-right mt-3\"\r\n        onClick={copyToClipboard}\r\n      >\r\n        <ClipBoardIcon />\r\n      </button>\r\n      <button className=\"btn btn-link float-right mt-3\" onClick={eraseText}>\r\n        <DeleteIcon />\r\n      </button>\r\n      <textarea\r\n        className=\"form-control my-2\"\r\n        value={text}\r\n        onChange={onChangeHandler}\r\n        rows=\"8\"\r\n        style={props.myStyle}\r\n      />\r\n      <button\r\n        className=\"btn btn-outline-primary m-1\"\r\n        onClick={convertToUpperCase}\r\n      >\r\n        Convert to UPPER Case\r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-primary m-1\"\r\n        onClick={convertToLowerCase}\r\n      >\r\n        Convert to lower Case\r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-primary m-1\"\r\n        onClick={convertToInverseCase}\r\n      >\r\n        Convert to InVeRsE Case\r\n      </button>\r\n      <h2 className=\"mt-4\">Your Text Summary:</h2>\r\n      <p>\r\n        {text.length > 0 ? text.trim().split(\" \").length : 0} words and{\" \"}\r\n        {text.length} characters\r\n      </p>\r\n      <h2>Preview:</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const SunIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-cloud-sun\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M7 8a3.5 3.5 0 0 1 3.5 3.555.5.5 0 0 0 .624.492A1.503 1.503 0 0 1 13 13.5a1.5 1.5 0 0 1-1.5 1.5H3a2 2 0 1 1 .1-3.998.5.5 0 0 0 .51-.375A3.502 3.502 0 0 1 7 8zm4.473 3a4.5 4.5 0 0 0-8.72-.99A3 3 0 0 0 3 16h8.5a2.5 2.5 0 0 0 0-5h-.027z\" />\r\n      <path d=\"M10.5 1.5a.5.5 0 0 0-1 0v1a.5.5 0 0 0 1 0v-1zm3.743 1.964a.5.5 0 1 0-.707-.707l-.708.707a.5.5 0 0 0 .708.708l.707-.708zm-7.779-.707a.5.5 0 0 0-.707.707l.707.708a.5.5 0 1 0 .708-.708l-.708-.707zm1.734 3.374a2 2 0 1 1 3.296 2.198c.199.281.372.582.516.898a3 3 0 1 0-4.84-3.225c.352.011.696.055 1.028.129zm4.484 4.074c.6.215 1.125.59 1.522 1.072a.5.5 0 0 0 .039-.742l-.707-.707a.5.5 0 0 0-.854.377zM14.5 6.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const MoonIcon = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-moon\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SunIcon } from \"./icons/SunIcon\";\r\nimport { MoonIcon } from \"./icons/MoonIcon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Navbar = (props) => {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.darkMode}`}\r\n      style={{\r\n        backgroundColor: props.darkMode === \"light\" ? \"#CEE5D0\" : \"#3b0202\",\r\n      }}\r\n    >\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        {props.title}\r\n      </Link>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">\r\n              {props.about_text}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <div\r\n          className=\"float-right m-3\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            display: \"inline-block\",\r\n            backgroundColor:\r\n              'props.darkMode === \"light\" ? \"#F8F9FA\" : \"#3b0202\",',\r\n          }}\r\n          onClick={props.toggleTheme}\r\n        >\r\n          {props.darkMode === \"dark\" ? <SunIcon /> : <MoonIcon />}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about_text: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Title Will be Displayed Here\",\r\n  about_text: \"About\",\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = (props) => {\r\n  document.title = `TextUtils - About`;\r\n  return (\r\n    <>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div\r\n          className=\"accordion-item\"\r\n          style={{\r\n            ...props.myStyle,\r\n            ...{ borderColor: props.myStyle.color, borderWidth: \"1px\" },\r\n          }}\r\n        >\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={props.myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"accordion-item\"\r\n          style={{\r\n            ...props.myStyle,\r\n            ...{ borderColor: props.myStyle.color, borderWidth: \"1px\" },\r\n          }}\r\n        >\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={props.myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"accordion-item\"\r\n          style={{\r\n            ...props.myStyle,\r\n            ...{ borderColor: props.myStyle.color, borderWidth: \"1px\" },\r\n          }}\r\n        >\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={props.myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>{\" \"}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Alert = (props) => {\r\n  return (\r\n    props.alert && (\r\n      <div class={`alert alert-${props.alert.type}`} role=\"alert\">\r\n        <strong>{props.alert.heading}</strong>\r\n        &nbsp;{props.alert.message}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { InputField } from \"./components/InputField\";\nimport { Navbar } from \"./components/Navbar\";\nimport { useState } from \"react\";\nimport { About } from \"./components/About\";\nimport { Alert } from \"./components/Alert\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(\"light\");\n  const lightTheme = {\n    color: \"black\",\n    backgroundColor: \"#F3F0D7\",\n  };\n  const darkTheme = {\n    color: \"white\",\n    backgroundColor: \"#660606\",\n  };\n  const [alert, setAlert] = useState(null);\n  const showAlert = (type, heading, msg) => {\n    setAlert({ type: type, heading: heading, message: msg });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const [myStyle, setmyStyle] = useState(lightTheme);\n  const toggleTheme = () => {\n    if (darkMode === \"dark\") {\n      setmyStyle(lightTheme);\n      setDarkMode(\"light\");\n      showAlert(\"success\", \"Success\", \"Light theme enabled\");\n    } else {\n      setmyStyle(darkTheme);\n      setDarkMode(\"dark\");\n      showAlert(\"danger\", \"Success\", \"Dark theme enabled\");\n    }\n  };\n  return (\n    <Router>\n      <div style={myStyle}>\n        <div style={{ minHeight: \"100vh\" }}>\n          <Navbar\n            title=\"TextUtils\"\n            about_text=\"About us\"\n            darkMode={darkMode}\n            myStyle={myStyle}\n            toggleTheme={toggleTheme}\n          />\n          <Alert alert={alert} />\n          <div style={myStyle}>\n            <div className=\"container my-3\">\n              <Routes>\n                <Route\n                  path=\"/\"\n                  element={\n                    <InputField myStyle={myStyle} showAlert={showAlert} />\n                  }\n                />\n                <Route path=\"/about\" element={<About myStyle={myStyle} />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}